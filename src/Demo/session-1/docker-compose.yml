version: '3.6'

services:
  ###################   GATEWAY
  gqlgateway:
    image: ${DOCKER_REGISTRY-}gqlgateway
    build:
      context: .
      dockerfile: src/GqlGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=http://+:5000;
    ports:
      - "5000:5000"
    depends_on:
      - neo4jgql
      - tagswebapi
      - redis

  ###################   REST API
  tagswebapi:
    image: ${DOCKER_REGISTRY-}tagswebapi
    build:
      context: .
      dockerfile: src/TagsWebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5003;
    ports:
      - "5003:5003"
    expose:
      - '5003'
    depends_on:
      - mssql

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - '1433:1433'
    expose:
      - '1433'
    environment:
      - MSSQL_PID=Express
      - ACCEPT_EULA=Y
      - SA_PASSWORD=yourStrong(!)Password

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  ###################   Neo4J GQL
  neo4jgql:
    build:
      context: .
      dockerfile: src/Neo4jGql/Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=s3cr3t
      - NEO4J_URI=neo4j://neo4jdb:7687
      - NODE_ENV=development
    depends_on:
      - neo4jdb

  neo4jdb:
    image: neo4j:5.2.0-community
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=neo4j/s3cr3t

volumes:
  cache:
    driver: local
